!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BLUE	src/view.h	13;"	d
BUILDDIR	Makefile	/^BUILDDIR  :=  build$/;"	m
CXX	Makefile	/^CXX       :=  g++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS  :=  -std=c++11 -Wall -pedantic -Wno-long-long -O0 -ggdb `pkg-config --libs ncurses`$/;"	m
CYAN	src/view.h	14;"	d
DATADIR	Makefile	/^DATADIR   :=  data$/;"	m
FPS	src/main.h	10;"	d
GLOBALS	src/globals.h	7;"	d
GREEN	Makefile	/^GREEN     :=  \\033[1;32m$/;"	m
GREEN	src/view.h	11;"	d
GREENT	Makefile	/^GREENT    :=  \\033[0;32m$/;"	m
MAGENTA	src/view.h	15;"	d
MAIN	src/main.h	2;"	d
MENU_SCREEN	src/scr_menu.h	2;"	d
NOCOL	Makefile	/^NOCOL     :=  \\033[0m$/;"	m
OBJECT	src/object.h	2;"	d
OBJECTS	Makefile	/^OBJECTS   :=  $(BUILDDIR)\/scr.o $(BUILDDIR)\/scr_quit.o $(BUILDDIR)\/scr_settings.o $(BUILDDIR)\/view.o $(BUILDDIR)\/scr_game.o $(BUILDDIR)\/scr_list.o $(BUILDDIR)\/scr_hiscore.o $(BUILDDIR)\/main.o $(BUILDDIR)\/object.o $(BUILDDIR)\/scr_menu.o $(BUILDDIR)\/globals.o $/;"	m
RED	Makefile	/^RED       :=  \\033[1;31m$/;"	m
RED	src/view.h	10;"	d
SCR	src/scr.h	2;"	d
SCREEN_GAME	src/view.h	19;"	d
SCREEN_HISCORE	src/view.h	20;"	d
SCREEN_MENU	src/view.h	18;"	d
SCREEN_QUIT	src/view.h	22;"	d
SCREEN_SETTINGS	src/view.h	21;"	d
SCREEN_UNDEF	src/view.h	23;"	d
SCR_GAME	src/scr_game.h	2;"	d
SCR_HISCORE	src/scr_hiscore.h	2;"	d
SCR_LIST	src/scr_list.h	2;"	d
SCR_QUIT	src/scr_quit.h	2;"	d
SCR_SETTINGS	src/scr_settings.h	2;"	d
SOURCES	Makefile	/^SOURCES   :=  $(SRCDIR)\/scr.cpp$(SRCDIR)\/scr_quit.cpp$(SRCDIR)\/scr_settings.cpp$(SRCDIR)\/view.cpp$(SRCDIR)\/scr_game.cpp$(SRCDIR)\/scr_list.cpp$(SRCDIR)\/scr_hiscore.cpp$(SRCDIR)\/main.cpp$(SRCDIR)\/object.cpp$(SRCDIR)\/scr_menu.cpp$(SRCDIR)\/globals.cpp$/;"	m
SRCDIR	Makefile	/^SRCDIR    :=  src$/;"	m
TARGET	Makefile	/^TARGET    :=  hendrvan$/;"	m
TLook	src/object.h	/^  struct TLook {$/;"	s	class:object
VERSION	src/globals.h	8;"	d
VIEW	src/view.h	7;"	d
WHITE	src/view.h	16;"	d
YELLOW	Makefile	/^YELLOW    :=  \\033[1;33m$/;"	m
YELLOW	src/view.h	12;"	d
YELLOWT	Makefile	/^YELLOWT   :=  \\033[0;33m$/;"	m
back	src/scr_list.h	/^  int back;$/;"	m	class:scr_list
basics	configure	/^basics(){$/;"	f
bonus	src/object.h	/^class bonus : public falling {$/;"	c
build_objects	configure	/^build_objects(){$/;"	f
choice	src/object.h	/^    int choice;$/;"	m	struct:object::TLook
colors	configure	/^colors(){$/;"	f
cols	src/view.h	/^  int cols;$/;"	m	class:view
current_row	src/scr.h	/^  int current_row;$/;"	m	class:scr
current_screen	src/view.h	/^  scr* current_screen;$/;"	m	class:view
destroy_effect	src/object.h	/^  TLook destroy_effect;$/;"	m	class:object
directories	configure	/^directories(){$/;"	f
draw_list	src/scr_list.cpp	/^void scr_list::draw_list() const$/;"	f	class:scr_list
end_section	configure	/^end_section(){$/;"	f
falling	src/object.h	/^class falling : public moving {$/;"	c
finish	src/main.cpp	/^void finish(int exit_code) { exit(exit_code); } \/\/ TODO implement$/;"	f
get_opts	src/globals.cpp	/^void get_opts(int argc, char** argv)$/;"	f
gui	src/main.cpp	/^view gui;$/;"	v
handle_event	src/scr_game.cpp	/^void scr_game::handle_event(int event) {}$/;"	f	class:scr_game
handle_event	src/scr_hiscore.cpp	/^void scr_hiscore::handle_event(int event) {}$/;"	f	class:scr_hiscore
handle_event	src/scr_list.cpp	/^void scr_list::handle_event(int event)$/;"	f	class:scr_list
handle_event	src/scr_quit.cpp	/^void scr_quit::handle_event(int event) {}$/;"	f	class:scr_quit
handle_event	src/scr_settings.cpp	/^void scr_settings::handle_event(int event) {}$/;"	f	class:scr_settings
handle_timer	src/main.cpp	/^void handle_timer(int sig) { gui.handle_timer(); }$/;"	f
handle_timer	src/scr_game.cpp	/^void scr_game::handle_timer() {}$/;"	f	class:scr_game
handle_timer	src/scr_list.cpp	/^void scr_list::handle_timer()$/;"	f	class:scr_list
handle_timer	src/scr_quit.cpp	/^void scr_quit::handle_timer() {}$/;"	f	class:scr_quit
handle_timer	src/view.cpp	/^void view::handle_timer() { current_screen->handle_timer(); }$/;"	f	class:view
init	src/view.cpp	/^void view::init()$/;"	f	class:view
intro	configure	/^intro(){$/;"	f
invader	src/object.h	/^class invader : public moving {$/;"	c
items	src/scr_list.h	/^  std::vector<std::pair<std::string, int>> items;$/;"	m	class:scr_list
list_files	configure	/^list_files(){$/;"	f
main	src/main.cpp	/^int main(int argc, char** argv)$/;"	f
midcol	src/scr.h	/^  int midcol;$/;"	m	class:scr
missile	src/object.h	/^class missile : public falling {$/;"	c
move	src/object.cpp	/^void moving::move(std::pair<int, int> xy)$/;"	f	class:moving
moving	src/object.h	/^class moving : public object {$/;"	c
object	src/object.cpp	/^object::object(int sx, int sy, int px, int py)$/;"	f	class:object
object	src/object.h	/^class object {$/;"	c
player	src/object.h	/^class player : public moving {$/;"	c
pos	src/object.h	/^  std::pair<int, int> pos;$/;"	m	class:object
print_hash_line	configure	/^print_hash_line(){$/;"	f
print_middle	configure	/^print_middle(){$/;"	f
print_title	configure	/^print_title(){$/;"	f
read_input	src/view.cpp	/^void view::read_input() {} \/\/ TODO$/;"	f	class:view
redraw	src/scr_game.cpp	/^void scr_game::redraw() const {}$/;"	f	class:scr_game
redraw	src/scr_hiscore.cpp	/^void scr_hiscore::redraw() const {}$/;"	f	class:scr_hiscore
redraw	src/scr_menu.cpp	/^void scr_menu::redraw() const$/;"	f	class:scr_menu
redraw	src/scr_quit.cpp	/^void scr_quit::redraw() const {}$/;"	f	class:scr_quit
redraw	src/scr_settings.cpp	/^void scr_settings::redraw() const {}$/;"	f	class:scr_settings
rows	src/view.h	/^  int rows;$/;"	m	class:view
scr	src/scr.cpp	/^scr::scr()$/;"	f	class:scr
scr	src/scr.h	/^class scr {$/;"	c
scr_game	src/scr_game.cpp	/^scr_game::scr_game() {}$/;"	f	class:scr_game
scr_game	src/scr_game.h	/^class scr_game : public scr {$/;"	c
scr_hiscore	src/scr_hiscore.cpp	/^scr_hiscore::scr_hiscore() {}$/;"	f	class:scr_hiscore
scr_hiscore	src/scr_hiscore.h	/^class scr_hiscore : public scr_list {$/;"	c
scr_list	src/scr_list.cpp	/^scr_list::scr_list()$/;"	f	class:scr_list
scr_list	src/scr_list.h	/^class scr_list : public scr {$/;"	c
scr_main	src/view.h	/^  WINDOW* scr_main;$/;"	m	class:view
scr_menu	src/scr_menu.cpp	/^scr_menu::scr_menu()$/;"	f	class:scr_menu
scr_menu	src/scr_menu.h	/^class scr_menu : public scr_list {$/;"	c
scr_quit	src/scr_quit.cpp	/^scr_quit::scr_quit() {}$/;"	f	class:scr_quit
scr_quit	src/scr_quit.h	/^class scr_quit : public scr {$/;"	c
scr_settings	src/scr_settings.cpp	/^scr_settings::scr_settings() {}$/;"	f	class:scr_settings
scr_settings	src/scr_settings.h	/^class scr_settings : public scr_list {$/;"	c
screen_items	src/scr_menu.h	/^  std::vector<int> screen_items;$/;"	m	class:scr_menu
selected_idx	src/scr_list.h	/^  int selected_idx;$/;"	m	class:scr_list
show	src/object.h	/^  TLook show;$/;"	m	class:object
show_help	src/globals.cpp	/^void show_help()$/;"	f
show_version	src/globals.cpp	/^void show_version()$/;"	f
size	src/object.h	/^  std::pair<int, int> size;$/;"	m	class:object
smart	src/object.h	/^class smart : public moving {$/;"	c
start_timer	src/main.cpp	/^void start_timer()$/;"	f
state	src/object.h	/^  int state;$/;"	m	class:moving
state	src/scr.h	/^  int state;$/;"	m	class:scr
switch_screen	src/view.cpp	/^void view::switch_screen(int s)$/;"	f	class:view
target	configure	/^target(){$/;"	f
ufo	src/object.h	/^class ufo : public moving {$/;"	c
utilities	configure	/^utilities(){$/;"	f
view	src/view.cpp	/^view::view()$/;"	f	class:view
view	src/view.h	/^class view {$/;"	c
wardrobe	src/object.h	/^    std::vector<std::string> wardrobe;$/;"	m	struct:object::TLook
win	src/scr.h	/^  WINDOW* win;$/;"	m	class:scr
~object	src/object.cpp	/^object::~object() {}$/;"	f	class:object
~scr	src/scr.cpp	/^scr::~scr() {}$/;"	f	class:scr
~scr_game	src/scr_game.cpp	/^scr_game::~scr_game() {}$/;"	f	class:scr_game
~scr_hiscore	src/scr_hiscore.cpp	/^scr_hiscore::~scr_hiscore() {}$/;"	f	class:scr_hiscore
~scr_list	src/scr_list.cpp	/^scr_list::~scr_list() {}$/;"	f	class:scr_list
~scr_menu	src/scr_menu.cpp	/^scr_menu::~scr_menu() {}$/;"	f	class:scr_menu
~scr_quit	src/scr_quit.cpp	/^scr_quit::~scr_quit() {}$/;"	f	class:scr_quit
~scr_settings	src/scr_settings.cpp	/^scr_settings::~scr_settings() {}$/;"	f	class:scr_settings
~view	src/view.cpp	/^view::~view() {}$/;"	f	class:view
